const nodemailer = require("nodemailer");

class EmailService {
  constructor() {
    // Configuraci√≥n del transporte con logs habilitados
    this.transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 465,
        secure: true,
        auth: {
          user: "sistemaderiegotiemporeal@gmail.com",
          pass: "tboa mqeh nagp qjpn",
        },
        logger: true,
        debug: true,
        connectionTimeout: 100000, // 10 segundos
        socketTimeout: 100000, // 10 segundos
      });
      
  }

  // M√©todo para probar la conexi√≥n con el servidor SMTP
  async verifyConnection() {
    try {
      console.log(`[${new Date().toISOString()}] Verificando conexi√≥n con el servidor SMTP...`);
      await this.transporter.verify();
      console.log(`[${new Date().toISOString()}] Conexi√≥n con el servidor SMTP verificada con √©xito.`);
    } catch (error) {
      console.error(`[${new Date().toISOString()}] Error al verificar conexi√≥n:`, error.message);
    }
  }

  // M√©todo para enviar un correo de prueba
  async testEmail() {
    try {
        const mailOptions = {
            from: "Sistema de Riego <sistemaderiegotiemporeal@gmail.com>", // Direcci√≥n del remitente con un nombre m√°s amigable
            to: "madeleycc15@gmail.com", // Direcci√≥n del destinatario
            subject: `‚ö†Ô∏è [ALERTA] 15 fuera del rango permitido ‚ö†Ô∏è`, // Asunto m√°s descriptivo
            text: `‚ö†Ô∏è ALERTA IMPORTANTE ‚ö†Ô∏è
    
    Estimado usuario,
    
    Se ha detectado una anomal√≠a en los par√°metros de 15. A continuaci√≥n, los detalles:
    
    üå°Ô∏è Variable: 15
    üö® Valor actual: 15
    ‚úÖ Umbral permitido: 15
    
    üìå Mensaje: holiiii
    
    Por favor, revise el sistema y tome las medidas necesarias para solucionar esta situaci√≥n.
    
    Atentamente,
    üå± Sistema de Riego en Tiempo Real üå±
            `,
        };

      console.log(`[${new Date().toISOString()}] Enviando correo...`);
      const info = await this.transporter.sendMail(mailOptions);
      console.log(`[${new Date().toISOString()}] Correo enviado con √©xito:`, info.response);
    } catch (error) {
      console.error(`[${new Date().toISOString()}] Error al enviar el correo de prueba:`, error.message);
    }
  }
}

module.exports = EmailService;
